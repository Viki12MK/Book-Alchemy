import requests
import datetime
from flask import Flask, render_template, request
from flask_sqlalchemy import SQLAlchemy
from data_models import Author, Book


# Create an instance of SQLAlchemy
db = SQLAlchemy()

# Create an instance of the Flask application
app = Flask(__name__)

# Configure the database connection:
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///C:/Users/user/Desktop/POVTORUVANJE/107/107.2/LIBRARY_ALCHEMY/book-alchemy/data/library.sqlite'
db.init_app(app)


@app.route('/')
def home():
    books = db.session.query(Book).all()
    for book in books:
        book.cover_url = get_cover_url(book.isbn)  # Add the cover image URL to each book
    return render_template('home.html', books=books)


@app.route('/add_author', methods=['GET', 'POST'])
def add_author():
    if request.method == 'POST':
        birth_date_str = request.form['birth_date']
        birth_date = datetime.datetime.strptime(birth_date_str, '%Y-%m-%d').date()

        date_of_death_str = request.form['date_of_death']
        date_of_death = None
        if date_of_death_str:
            date_of_death = datetime.datetime.strptime(date_of_death_str, '%Y-%m-%d').date()

        author = Author(
            author_name=request.form['author_name'],
            birth_date=birth_date,
            date_of_death=date_of_death,
        )
        db.session.add(author)
        db.session.commit()
    return render_template("/add_author.html")



@app.route('/add_book', methods=['GET', 'POST'])
def add_book():
    if request.method == 'POST':
        book = Book(
            isbn=request.form['isbn'],
            title=request.form['title'],
            publication_year=request.form['publication_year'],
            author_id=request.form['author_id'],
        )
        db.session.add(book)
        db.session.commit()

    authors = db.session.query(Author).all()
    return render_template("/add_book.html", authors=authors)


def get_cover_url(isbn):
    api_url = f"https://covers.openlibrary.org/b/isbn/{isbn}-M.jpg"

    response = requests.get(api_url)
    if response.status_code == 200:
        return api_url
    return None


if __name__ == "__main__":
    with app.app_context():
        db.create_all()
    app.run(host="0.0.0.0", port=5000, debug=True)
